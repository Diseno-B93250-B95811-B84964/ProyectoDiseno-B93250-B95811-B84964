/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Ryzen
 */
public class MainGame extends javax.swing.JPanel {
    private final static int ROWS = 8;
    private final static int COLUMNS = 3;
    private JLabel tilesArray[][] = new JLabel[ROWS][COLUMNS];
    private JLabel diceLabelArray [];
    private ImageIcon noScoreDiceState;
    private ImageIcon scoreDiceState;
    private int usedPiecesFirstPlayer;
    private int usedPiecesSecondPlayer;
    
    private final static Color BLUE = new Color (0,102,255);
    private final static Color BROWN = new Color (102,51,0);
    private final static Color GREEN = new Color (102,204,0);
    private final static Color PURPLE = new Color (102,0,102);
    private final static Color RED = new Color (255,0,0);
    private final static Color YELLOW = new Color (255,204,0);

    /**
     * Creates new form MainGame
     * @throws java.io.IOException
     */
    public MainGame() throws IOException {
        initComponents();
        initializeTilesArray();
        makeUrBoard();
        makeDices();
        this.usedPiecesFirstPlayer = 1;
        this.usedPiecesSecondPlayer = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveAndLeaveButton = new javax.swing.JButton();
        playerTurnLabel = new javax.swing.JLabel();
        Player1Panel = new javax.swing.JPanel();
        firstPlayerTitleLabel = new javax.swing.JLabel();
        firstPlayerLabelName = new java.awt.Label();
        firstPlayerScore = new javax.swing.JLabel();
        PlayerScoreTitle = new javax.swing.JLabel();
        inventoryTitle1 = new javax.swing.JLabel();
        pieceLabelFirstPlayer1 = new javax.swing.JLabel();
        pieceLabelFirstPlayer2 = new javax.swing.JLabel();
        pieceLabelFirstPlayer3 = new javax.swing.JLabel();
        pieceLabelFirstPlayer4 = new javax.swing.JLabel();
        pieceLabelFirstPlayer5 = new javax.swing.JLabel();
        pieceLabelFirstPlayer6 = new javax.swing.JLabel();
        pieceLabelFirstPlayer7 = new javax.swing.JLabel();
        Player2Panel = new javax.swing.JPanel();
        secondPlayerTitleLabel = new javax.swing.JLabel();
        secondPlayerLabelName = new java.awt.Label();
        secondPlayerScore = new javax.swing.JLabel();
        PlayerScoreTitle2 = new javax.swing.JLabel();
        inventoryTitle2 = new javax.swing.JLabel();
        pieceLabelSecondPlayer1 = new javax.swing.JLabel();
        pieceLabelSecondPlayer2 = new javax.swing.JLabel();
        pieceLabelSecondPlayer3 = new javax.swing.JLabel();
        pieceLabelSecondPlayer4 = new javax.swing.JLabel();
        pieceLabelSecondPlayer5 = new javax.swing.JLabel();
        pieceLabelSecondPlayer6 = new javax.swing.JLabel();
        pieceLabelSecondPlayer7 = new javax.swing.JLabel();
        boardGamePanel = new javax.swing.JPanel();
        dicePanel = new javax.swing.JPanel();
        dice4 = new javax.swing.JLabel();
        dice3 = new javax.swing.JLabel();
        dice2 = new javax.swing.JLabel();
        dice1 = new javax.swing.JLabel();
        moves = new javax.swing.JLabel();
        throwDiceButton = new javax.swing.JButton();
        rulesButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        saveAndLeaveButton.setBackground(new java.awt.Color(44, 37, 37));
        saveAndLeaveButton.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        saveAndLeaveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveAndLeaveButton.setText("SAVE AND EXIT");
        saveAndLeaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndLeaveButtonActionPerformed(evt);
            }
        });

        playerTurnLabel.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        playerTurnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerTurnLabel.setText("Player 1's turn");

        Player1Panel.setBackground(new java.awt.Color(255, 255, 255));
        Player1Panel.setPreferredSize(new java.awt.Dimension(350, 700));

        firstPlayerTitleLabel.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        firstPlayerTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstPlayerTitleLabel.setText("Player 1");

        firstPlayerLabelName.setAlignment(java.awt.Label.CENTER);
        firstPlayerLabelName.setFont(new java.awt.Font("Century Schoolbook", 0, 18)); // NOI18N
        firstPlayerLabelName.setText("label1");

        firstPlayerScore.setFont(new java.awt.Font("Century Schoolbook", 0, 24)); // NOI18N
        firstPlayerScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstPlayerScore.setText("0");

        PlayerScoreTitle.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        PlayerScoreTitle.setText("Score");

        inventoryTitle1.setFont(new java.awt.Font("Century Schoolbook", 0, 18)); // NOI18N
        inventoryTitle1.setText("Pieces Left");

        pieceLabelFirstPlayer1.setText("jLabel1");

        pieceLabelFirstPlayer2.setText("jLabel1");

        pieceLabelFirstPlayer3.setText("jLabel1");

        pieceLabelFirstPlayer4.setText("jLabel1");

        pieceLabelFirstPlayer5.setText("jLabel1");

        pieceLabelFirstPlayer6.setText("jLabel1");

        pieceLabelFirstPlayer7.setText("jLabel1");

        javax.swing.GroupLayout Player1PanelLayout = new javax.swing.GroupLayout(Player1Panel);
        Player1Panel.setLayout(Player1PanelLayout);
        Player1PanelLayout.setHorizontalGroup(
            Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Player1PanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Player1PanelLayout.createSequentialGroup()
                        .addComponent(pieceLabelFirstPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176))
                    .addGroup(Player1PanelLayout.createSequentialGroup()
                        .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Player1PanelLayout.createSequentialGroup()
                                .addComponent(pieceLabelFirstPlayer3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pieceLabelFirstPlayer4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pieceLabelFirstPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Player1PanelLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(inventoryTitle1)))
                        .addGap(18, 18, 18)
                        .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pieceLabelFirstPlayer6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pieceLabelFirstPlayer5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pieceLabelFirstPlayer7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36))
            .addGroup(Player1PanelLayout.createSequentialGroup()
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player1PanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(PlayerScoreTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(firstPlayerScore, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Player1PanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstPlayerLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstPlayerTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Player1PanelLayout.setVerticalGroup(
            Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player1PanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(firstPlayerTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstPlayerLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(inventoryTitle1)
                .addGap(39, 39, 39)
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelFirstPlayer4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelFirstPlayer5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelFirstPlayer3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelFirstPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelFirstPlayer6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelFirstPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelFirstPlayer7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(Player1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayerScoreTitle)
                    .addComponent(firstPlayerScore))
                .addGap(32, 32, 32))
        );

        Player2Panel.setBackground(new java.awt.Color(255, 255, 255));
        Player2Panel.setPreferredSize(new java.awt.Dimension(350, 700));

        secondPlayerTitleLabel.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        secondPlayerTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondPlayerTitleLabel.setText("Player 2");

        secondPlayerLabelName.setAlignment(java.awt.Label.CENTER);
        secondPlayerLabelName.setFont(new java.awt.Font("Century Schoolbook", 0, 18)); // NOI18N
        secondPlayerLabelName.setText("label1");

        secondPlayerScore.setFont(new java.awt.Font("Century Schoolbook", 0, 24)); // NOI18N
        secondPlayerScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondPlayerScore.setText("0");

        PlayerScoreTitle2.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        PlayerScoreTitle2.setText("Score");

        inventoryTitle2.setFont(new java.awt.Font("Century Schoolbook", 0, 18)); // NOI18N
        inventoryTitle2.setText("Pieces Left");

        pieceLabelSecondPlayer1.setText("jLabel1");

        pieceLabelSecondPlayer2.setText("jLabel1");

        pieceLabelSecondPlayer3.setText("jLabel1");

        pieceLabelSecondPlayer4.setText("jLabel1");

        pieceLabelSecondPlayer5.setText("jLabel1");

        pieceLabelSecondPlayer6.setText("jLabel1");

        pieceLabelSecondPlayer7.setText("jLabel1");

        javax.swing.GroupLayout Player2PanelLayout = new javax.swing.GroupLayout(Player2Panel);
        Player2Panel.setLayout(Player2PanelLayout);
        Player2PanelLayout.setHorizontalGroup(
            Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player2PanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondPlayerTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondPlayerLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Player2PanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Player2PanelLayout.createSequentialGroup()
                        .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inventoryTitle2)
                            .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Player2PanelLayout.createSequentialGroup()
                                    .addComponent(pieceLabelSecondPlayer3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(pieceLabelSecondPlayer4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(pieceLabelSecondPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pieceLabelSecondPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pieceLabelSecondPlayer6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pieceLabelSecondPlayer5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pieceLabelSecondPlayer7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Player2PanelLayout.createSequentialGroup()
                        .addComponent(PlayerScoreTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(secondPlayerScore, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Player2PanelLayout.setVerticalGroup(
            Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Player2PanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(secondPlayerTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secondPlayerLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(inventoryTitle2)
                .addGap(27, 27, 27)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelSecondPlayer3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelSecondPlayer4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelSecondPlayer5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelSecondPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelSecondPlayer6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceLabelSecondPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pieceLabelSecondPlayer7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(Player2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayerScoreTitle2)
                    .addComponent(secondPlayerScore))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout boardGamePanelLayout = new javax.swing.GroupLayout(boardGamePanel);
        boardGamePanel.setLayout(boardGamePanelLayout);
        boardGamePanelLayout.setHorizontalGroup(
            boardGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        boardGamePanelLayout.setVerticalGroup(
            boardGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
        );

        dice4.setText("dice4");

        dice3.setText("dice3");

        dice2.setText("dice2");

        dice1.setText("dice1");

        moves.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        moves.setText("Number of moves");

        throwDiceButton.setBackground(new java.awt.Color(44, 37, 37));
        throwDiceButton.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        throwDiceButton.setForeground(new java.awt.Color(255, 255, 255));
        throwDiceButton.setText("THROW DICE");
        throwDiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                throwDiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dicePanelLayout = new javax.swing.GroupLayout(dicePanel);
        dicePanel.setLayout(dicePanelLayout);
        dicePanelLayout.setHorizontalGroup(
            dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dicePanelLayout.createSequentialGroup()
                        .addComponent(dice1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dice2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(throwDiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dicePanelLayout.createSequentialGroup()
                        .addComponent(dice3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dice4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dicePanelLayout.createSequentialGroup()
                        .addComponent(moves)
                        .addGap(28, 28, 28)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dicePanelLayout.setVerticalGroup(
            dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dice1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dicePanelLayout.createSequentialGroup()
                        .addComponent(moves)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(throwDiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        rulesButton.setBackground(new java.awt.Color(44, 37, 37));
        rulesButton.setFont(new java.awt.Font("Century Schoolbook", 1, 24)); // NOI18N
        rulesButton.setForeground(new java.awt.Color(255, 255, 255));
        rulesButton.setText("GAME RULES");
        rulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rulesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(boardGamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saveAndLeaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rulesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Player2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(playerTurnLabel)))
                .addGap(0, 36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(playerTurnLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boardGamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Player2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rulesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(saveAndLeaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(Player1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(dicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveAndLeaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndLeaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveAndLeaveButtonActionPerformed

    
    private void rulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulesButtonActionPerformed
        //UrRulesModel rules = new UrRulesModel();
        JFrame frame = new JFrame("Rules");        
        JPanel panel = new JPanel();
        LayoutManager layout = new FlowLayout();
        panel.setLayout(layout);     
        final JLabel title = new JLabel();
        title.setFont(new Font("Century Schoolbook", 1, 36));
        //title.setText(rules.getRules()[0]);
        panel.add(title);    
        /*for (int index = 1; index < rules.getLength(); index++) {
            final JLabel label = new JLabel();
            label.setFont(new Font("Century Schoolbook", 0, 18));
            label.setText(rules.getRules()[index]);
            panel.add(label);
        }*/
        frame.getContentPane().add(panel, BorderLayout.CENTER);   
        frame.setSize(600, 420);      
        frame.setLocationRelativeTo(null);  
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    }//GEN-LAST:event_rulesButtonActionPerformed

    private void throwDiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_throwDiceButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_throwDiceButtonActionPerformed

    /* Main Panel Buttons */

    public void addSaveAndLeaveButtonClickListener(ActionListener listenForButton) {
        saveAndLeaveButton.addActionListener(listenForButton);
    }
    
    public void addthrowDiceButtonButtonClickListener(ActionListener listenForButton) {
        throwDiceButton.addActionListener(listenForButton);
    }
    
    /* Button feature */
    public void desactiveAPieceForFirstPlayer(){
        switch (usedPiecesFirstPlayer) {
            case 1 -> {
                pieceLabelFirstPlayer1.setEnabled(false);
                pieceLabelFirstPlayer1.setVisible(false);
                break;
            }
            case 2 -> {
                pieceLabelFirstPlayer2.setEnabled(false);
                pieceLabelFirstPlayer2.setVisible(false);
                break;
            }
            case 3 -> {
                pieceLabelFirstPlayer3.setEnabled(false);
                pieceLabelFirstPlayer3.setVisible(false);
                break;
            }
            case 4 -> {
                pieceLabelFirstPlayer4.setEnabled(false);
                pieceLabelFirstPlayer4.setVisible(false);
                break;
            }
            case 5 -> {
                pieceLabelFirstPlayer5.setEnabled(false);
                pieceLabelFirstPlayer5.setVisible(false);
                break;
            }
            case 6 -> {
                pieceLabelFirstPlayer6.setEnabled(false);
                pieceLabelFirstPlayer6.setVisible(false);
                break;
            }
            case 7 -> {
                pieceLabelFirstPlayer7.setEnabled(false);
                pieceLabelFirstPlayer7.setVisible(false);
                break;
            }
            default -> {
            }
        }
        usedPiecesFirstPlayer++;
    }

    public void activeAPieceForFirstPlayer(){
        usedPiecesFirstPlayer--;
        switch (usedPiecesFirstPlayer) {
            case 1 -> {
                pieceLabelFirstPlayer1.setEnabled(true);
                pieceLabelFirstPlayer1.setVisible(true);
                break;
            }
            case 2 -> {
                pieceLabelFirstPlayer2.setEnabled(true);
                pieceLabelFirstPlayer2.setVisible(true);
                break;
            }
            case 3 -> {
                pieceLabelFirstPlayer3.setEnabled(true);
                pieceLabelFirstPlayer3.setVisible(true);
                break;
            }
            case 4 -> {
                pieceLabelFirstPlayer4.setEnabled(true);
                pieceLabelFirstPlayer4.setVisible(true);
                break;
            }
            case 5 -> {
                pieceLabelFirstPlayer5.setEnabled(true);
                pieceLabelFirstPlayer5.setVisible(true);
                break;
            }
            case 6 -> {
                pieceLabelFirstPlayer6.setEnabled(true);
                pieceLabelFirstPlayer6.setVisible(true);
                break;
            }
            case 7 -> {
                pieceLabelFirstPlayer7.setEnabled(true);
                pieceLabelFirstPlayer7.setVisible(true);
                break;
            }
            default -> {
            }
        }
    } 
    
    public void desactiveAPieceForSecondPlayer(){
        switch (usedPiecesSecondPlayer) {
            case 1 -> {
                pieceLabelSecondPlayer1.setEnabled(false);
                pieceLabelSecondPlayer1.setVisible(false);
                break;
            }
            case 2 -> {
                pieceLabelSecondPlayer2.setEnabled(false);
                pieceLabelSecondPlayer2.setVisible(false);
                break;
            }
            case 3 -> {
                pieceLabelSecondPlayer3.setEnabled(false);
                pieceLabelSecondPlayer3.setVisible(false);
                break;
            }
            case 4 -> {
                pieceLabelSecondPlayer4.setEnabled(false);
                pieceLabelSecondPlayer4.setVisible(false);
                break;
            }
            case 5 -> {
                pieceLabelSecondPlayer5.setEnabled(false);
                pieceLabelSecondPlayer5.setVisible(false);
                break;
            }
            case 6 -> {
                pieceLabelSecondPlayer6.setEnabled(false);
                pieceLabelSecondPlayer6.setVisible(false);
                break;
            }
            case 7 -> {
                pieceLabelSecondPlayer7.setEnabled(false);
                pieceLabelSecondPlayer7.setVisible(false);
                break;
            }
            default -> {
            }
        }
        usedPiecesSecondPlayer++;
    }

    public void activeAPieceForSecondPlayer(){
        usedPiecesSecondPlayer--;
        switch (usedPiecesSecondPlayer) {
            case 1 -> {
                pieceLabelSecondPlayer1.setEnabled(true);
                pieceLabelSecondPlayer1.setVisible(true);
                break;
            }
            case 2 -> {
                pieceLabelSecondPlayer2.setEnabled(true);
                pieceLabelSecondPlayer2.setVisible(true);
                break;
            }
            case 3 -> {
                pieceLabelSecondPlayer3.setEnabled(true);
                pieceLabelSecondPlayer3.setVisible(true);
                break;
            }
            case 4 -> {
                pieceLabelSecondPlayer4.setEnabled(true);
                pieceLabelSecondPlayer4.setVisible(true);
                break;
            }
            case 5 -> {
                pieceLabelSecondPlayer5.setEnabled(true);
                pieceLabelSecondPlayer5.setVisible(true);
                break;
            }
            case 6 -> {
                pieceLabelSecondPlayer6.setEnabled(true);
                pieceLabelSecondPlayer6.setVisible(true);
                break;
            }
            case 7 -> {
                pieceLabelSecondPlayer7.setEnabled(true);
                pieceLabelSecondPlayer7.setVisible(true);
                break;
            }
            default -> {
            }
        }      
    } 
    
    /*Load Images Methods*/
    private BufferedImage loadImagesForJarFile(String imageName) throws IOException{
        String generalPath = "/images/";
        String extensionName = ".png";
        String finalPath = generalPath+imageName+extensionName;
        BufferedImage image = ImageIO.read(getClass().getResourceAsStream(finalPath));  
        return image;
    }
    
    private BufferedImage loadImagesForIDEFile(String imageName) throws IOException{
        String generalPath = "images/";
        String extensionName = ".png";
        String finalPath = generalPath+imageName+extensionName;
        BufferedImage image = ImageIO.read(new FileInputStream(finalPath));   
        return image;
    }

    /* Main Board Methods  */
    private void makeUrBoard() throws IOException{
        try {
            tilesArray[4][0].setBackground(Color.decode("#E0E0E0"));
            tilesArray[5][0].show(false);
            tilesArray[4][2].setBackground(Color.decode("#E0E0E0")); 
            tilesArray[5][2].show(false);
            setRosesToBoard();
        } catch (IOException e) {
            System.out.println("Rose icon not found");
        }
    }
    
    private ImageIcon getImageIconRose() throws IOException{
        /*For JAR FILE*/
        //BufferedImage image = loadImagesForJarFile("icon2_rounded"); 
        
        /*For NetBeans*/
        BufferedImage image = loadImagesForIDEFile("icon2_rounded");
        
        ImageIcon roseIcon = resizeImage(image, 80,80);
        return roseIcon;
    }
    
    private void setRosesToBoard() throws IOException{
        ImageIcon roseIcon = getImageIconRose();
        tilesArray[0][0].setIcon(roseIcon);
        tilesArray[0][2].setIcon(roseIcon);
        tilesArray[3][1].setIcon(roseIcon);
        tilesArray[6][0].setIcon(roseIcon);
        tilesArray[6][2].setIcon(roseIcon);
    }
    
    private void initializeTilesArray(){
        int intialXGap = 39;
        int intialYGap = 18;
        int horizontalGapTuning = 89;
        int verticalGapTuning = horizontalGapTuning - 50;
        int verticaOffset = horizontalGapTuning - 2;
        for (int row = 0; row < ROWS; row++) {
            for (int column = 0; column < COLUMNS; column++) 
            {
                tilesArray[row][column] = new JLabel();
                tilesArray[row][column].setBackground(Color.decode("#2D3553"));
                tilesArray[row][column].setOpaque(true);
                tilesArray[row][column].setBounds(intialXGap, intialYGap, 80, 80);
                boardGamePanel.add(tilesArray[row][column]);
                intialXGap += horizontalGapTuning;
            }
            intialXGap = verticalGapTuning;
            intialYGap += verticaOffset;
        }
    }
    
    public JLabel getLabel(int row, int column){
        return tilesArray[row][column];
    }
    
    public void setNextPossibleLabel(int row, int column, Icon icon) {
        tilesArray[row][column].setIcon(icon);
    }
    
    public void removeIconFromLabel(int row, int column)throws IOException{
        tilesArray[row][column].setIcon(null);
    }
    
    public void removeIconFromRose0_0() throws IOException{
        ImageIcon image = getImageIconRose();
        tilesArray[0][0].setIcon(image);
    }

    public void removeIconFromRose0_2() throws IOException{
        ImageIcon image = getImageIconRose();
        tilesArray[0][2].setIcon(image);
    }

    public void removeIconFromRose3_1() throws IOException{
        ImageIcon image = getImageIconRose();
        tilesArray[3][1].setIcon(image);
    }

    public void removeIconFromRose6_0() throws IOException{
        ImageIcon image = getImageIconRose();
        tilesArray[6][0].setIcon(image);
    }

    public void removeIconFromRose6_2() throws IOException{
        ImageIcon image = getImageIconRose();
        tilesArray[6][2].setIcon(image);
    }

    public ImageIcon getPieceImageColor(Color color) {
        ImageIcon colorIcon = null;
        try {
            BufferedImage image = null;
            if (color.getRGB() == BLUE.getRGB()) {
                //image = loadImagesForJarFile("blue_piece_rbg");
                image = loadImagesForIDEFile("blue_piece_rbg");
            } else if (color.getRGB() == BROWN.getRGB()) {
                //image = loadImagesForJarFile("brown_piece_rbg");
                image = loadImagesForIDEFile("brown_piece_rbg");
            } else if (color.getRGB() == GREEN.getRGB()) {
                //image = loadImagesForJarFile("green_piece_rbg");
                image = loadImagesForIDEFile("green_piece_rbg");
            } else if (color.getRGB() == PURPLE.getRGB()) {
                //image = loadImagesForJarFile("purple_piece_rbg");
                image = loadImagesForIDEFile("purple_piece_rbg");
            } else if (color.getRGB() == RED.getRGB()) {
                //image = loadImagesForJarFile("red_piece_rbg");
                image = loadImagesForIDEFile("red_piece_rbg");
            } else if (color.getRGB() == YELLOW.getRGB()) {
                //image = loadImagesForJarFile("yellow_piece_rbg");
                image = loadImagesForIDEFile("yellow_piece_rbg");
            }
            colorIcon = resizeImage(image, 78, 78);
           
        } catch (IOException e) {
            System.out.println("Color piece icon not found");
        }
      return colorIcon;
    }
    
    /* Color choose Pieces Feature */
    public void setFirstPlayerPieceColor(Color color) throws IOException {
        ImageIcon colorIcon = getPieceImageColor(color);
        modifiyFirstPlayerPieces(colorIcon);
    }
    
    public void setSecondPlayerPieceColor(Color color) throws IOException{
        ImageIcon colorIcon = getPieceImageColor(color);
        modifySecondPlayerPieces(colorIcon);
    }
    
    /* Main Frame Dices Feature */
    private void makeDices(){
        try{
            diceLabelArray = new JLabel[4];      
            /*For JAR file*/
            //BufferedImage diceState1Image = loadImagesForJarFile("result_0_1");
            //BufferedImage diceState2Image = loadImagesForJarFile("result_1_1");
            
            /*For NetBeans*/   
            BufferedImage diceState1Image = loadImagesForIDEFile("result_0_1");
            BufferedImage diceState2Image = loadImagesForIDEFile("result_1_1");

            noScoreDiceState = resizeImage(diceState1Image, 77, 77);
            scoreDiceState = resizeImage(diceState2Image, 77, 77 );
            diceLabelArray[0] = dice1;
            diceLabelArray[1] = dice2;
            diceLabelArray[2] = dice3;
            diceLabelArray[3] = dice4;
            dice1.setIcon(noScoreDiceState);
            dice2.setIcon(noScoreDiceState);
            dice3.setIcon(noScoreDiceState);
            dice4.setIcon(noScoreDiceState);
            
        } catch(IOException e){
            System.out.println("Dices images not found!");
        }
    }
    
    private ImageIcon resizeImage(BufferedImage diceState, int width, int height){
        ImageIcon diceStateIcon = new ImageIcon(diceState);
        Image temporalImage = diceStateIcon.getImage();
        Image resizedImage = temporalImage.getScaledInstance(width, height,  java.awt.Image.SCALE_SMOOTH);
        return new ImageIcon(resizedImage);
    }
    
    public void showThrow(int rollResult)
    {
        for(int index = 0; index < rollResult; index++){
            diceLabelArray[index].setIcon(scoreDiceState);
        }
    }
    
    public void cleanDice()
    {
         dice1.setIcon(noScoreDiceState);
         dice2.setIcon(noScoreDiceState);
         dice3.setIcon(noScoreDiceState);
         dice4.setIcon(noScoreDiceState);
    }
    
    public void setMoves(int rollResult)
    {
        String movesResult = String.valueOf(rollResult);
        moves.setText(movesResult);
    }

    /*Get players pieces icons*/

    public Icon getFirstPlayerIcon(){
        return pieceLabelFirstPlayer1.getIcon();
    }

    public Icon getSecondPlayerIcon(){
        return pieceLabelSecondPlayer1.getIcon();
    }

    /*Personalized match */
    public void setFirstPlayerNameToLabel(String name){
        firstPlayerLabelName.setText(name);
    }

    public void setSecondPlayerNameToLabel(String name){
        secondPlayerLabelName.setText(name);
    }

    private void modifiyFirstPlayerPieces(ImageIcon icon) {
        pieceLabelFirstPlayer1.setIcon(icon);
        pieceLabelFirstPlayer2.setIcon(icon);
        pieceLabelFirstPlayer3.setIcon(icon);
        pieceLabelFirstPlayer4.setIcon(icon);
        pieceLabelFirstPlayer5.setIcon(icon);
        pieceLabelFirstPlayer6.setIcon(icon);
        pieceLabelFirstPlayer7.setIcon(icon);
    }
    
    private void modifySecondPlayerPieces(ImageIcon icon)  {
        pieceLabelSecondPlayer1.setIcon(icon);
        pieceLabelSecondPlayer2.setIcon(icon);
        pieceLabelSecondPlayer3.setIcon(icon);
        pieceLabelSecondPlayer4.setIcon(icon);
        pieceLabelSecondPlayer5.setIcon(icon);
        pieceLabelSecondPlayer6.setIcon(icon);
        pieceLabelSecondPlayer7.setIcon(icon);
    }
    
    /* Add score to players */
    
    public void addScoreToFirstPlayer() {
        int currentScore = Integer.parseInt(firstPlayerScore.getText());
        currentScore+=1;
        firstPlayerScore.setText(Integer.toString(currentScore));
    }

    public void addScoreToSecondPlayer() {
        int currentScore = Integer.parseInt(secondPlayerScore.getText());
        currentScore+=1;
        secondPlayerScore.setText(Integer.toString(currentScore));
    }

    public void addScoreToFirstPlayer(int points) {
        int currentScore = Integer.parseInt(firstPlayerScore.getText());
        currentScore+=points;
        firstPlayerScore.setText(Integer.toString(currentScore));
    }

    public void addScoreToSecondPlayer(int points) {
        int currentScore = Integer.parseInt(secondPlayerScore.getText());
        currentScore+=points;
        secondPlayerScore.setText(Integer.toString(currentScore));
    }

    public void changePlayerTurn(int number) {
        String playerTurn = "Player " + number+"'s" + " turn";
        playerTurnLabel.setText(playerTurn);
    }

    public void declarePlayerWinner(int number) {
        String playerTurn = "Player " + number+"'s" + " won!";
        playerTurnLabel.setText(playerTurn);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Player1Panel;
    private javax.swing.JPanel Player2Panel;
    private javax.swing.JLabel PlayerScoreTitle;
    private javax.swing.JLabel PlayerScoreTitle2;
    private javax.swing.JPanel boardGamePanel;
    private javax.swing.JLabel dice1;
    private javax.swing.JLabel dice2;
    private javax.swing.JLabel dice3;
    private javax.swing.JLabel dice4;
    private javax.swing.JPanel dicePanel;
    private java.awt.Label firstPlayerLabelName;
    private javax.swing.JLabel firstPlayerScore;
    private javax.swing.JLabel firstPlayerTitleLabel;
    private javax.swing.JLabel inventoryTitle1;
    private javax.swing.JLabel inventoryTitle2;
    private javax.swing.JLabel moves;
    private javax.swing.JLabel pieceLabelFirstPlayer1;
    private javax.swing.JLabel pieceLabelFirstPlayer2;
    private javax.swing.JLabel pieceLabelFirstPlayer3;
    private javax.swing.JLabel pieceLabelFirstPlayer4;
    private javax.swing.JLabel pieceLabelFirstPlayer5;
    private javax.swing.JLabel pieceLabelFirstPlayer6;
    private javax.swing.JLabel pieceLabelFirstPlayer7;
    private javax.swing.JLabel pieceLabelSecondPlayer1;
    private javax.swing.JLabel pieceLabelSecondPlayer2;
    private javax.swing.JLabel pieceLabelSecondPlayer3;
    private javax.swing.JLabel pieceLabelSecondPlayer4;
    private javax.swing.JLabel pieceLabelSecondPlayer5;
    private javax.swing.JLabel pieceLabelSecondPlayer6;
    private javax.swing.JLabel pieceLabelSecondPlayer7;
    private javax.swing.JLabel playerTurnLabel;
    private javax.swing.JButton rulesButton;
    private javax.swing.JButton saveAndLeaveButton;
    private java.awt.Label secondPlayerLabelName;
    private javax.swing.JLabel secondPlayerScore;
    private javax.swing.JLabel secondPlayerTitleLabel;
    private javax.swing.JButton throwDiceButton;
    // End of variables declaration//GEN-END:variables

}

